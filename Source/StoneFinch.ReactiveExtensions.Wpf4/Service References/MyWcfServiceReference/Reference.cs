//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StoneFinch.ReactiveExtensions.Wpf4.MyWcfServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyWcfServiceReference.IMyWcfService")]
    public interface IMyWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyWcfService/GetCurrentDateTimeUtc", ReplyAction="http://tempuri.org/IMyWcfService/GetCurrentDateTimeUtcResponse")]
        System.DateTime GetCurrentDateTimeUtc();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMyWcfService/GetCurrentDateTimeUtc", ReplyAction="http://tempuri.org/IMyWcfService/GetCurrentDateTimeUtcResponse")]
        System.IAsyncResult BeginGetCurrentDateTimeUtc(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetCurrentDateTimeUtc(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyWcfServiceChannel : StoneFinch.ReactiveExtensions.Wpf4.MyWcfServiceReference.IMyWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrentDateTimeUtcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrentDateTimeUtcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyWcfServiceClient : System.ServiceModel.ClientBase<StoneFinch.ReactiveExtensions.Wpf4.MyWcfServiceReference.IMyWcfService>, StoneFinch.ReactiveExtensions.Wpf4.MyWcfServiceReference.IMyWcfService {
        
        private BeginOperationDelegate onBeginGetCurrentDateTimeUtcDelegate;
        
        private EndOperationDelegate onEndGetCurrentDateTimeUtcDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrentDateTimeUtcCompletedDelegate;
        
        public MyWcfServiceClient() {
        }
        
        public MyWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetCurrentDateTimeUtcCompletedEventArgs> GetCurrentDateTimeUtcCompleted;
        
        public System.DateTime GetCurrentDateTimeUtc() {
            return base.Channel.GetCurrentDateTimeUtc();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCurrentDateTimeUtc(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrentDateTimeUtc(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndGetCurrentDateTimeUtc(System.IAsyncResult result) {
            return base.Channel.EndGetCurrentDateTimeUtc(result);
        }
        
        private System.IAsyncResult OnBeginGetCurrentDateTimeUtc(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetCurrentDateTimeUtc(callback, asyncState);
        }
        
        private object[] OnEndGetCurrentDateTimeUtc(System.IAsyncResult result) {
            System.DateTime retVal = this.EndGetCurrentDateTimeUtc(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCurrentDateTimeUtcCompleted(object state) {
            if ((this.GetCurrentDateTimeUtcCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrentDateTimeUtcCompleted(this, new GetCurrentDateTimeUtcCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrentDateTimeUtcAsync() {
            this.GetCurrentDateTimeUtcAsync(null);
        }
        
        public void GetCurrentDateTimeUtcAsync(object userState) {
            if ((this.onBeginGetCurrentDateTimeUtcDelegate == null)) {
                this.onBeginGetCurrentDateTimeUtcDelegate = new BeginOperationDelegate(this.OnBeginGetCurrentDateTimeUtc);
            }
            if ((this.onEndGetCurrentDateTimeUtcDelegate == null)) {
                this.onEndGetCurrentDateTimeUtcDelegate = new EndOperationDelegate(this.OnEndGetCurrentDateTimeUtc);
            }
            if ((this.onGetCurrentDateTimeUtcCompletedDelegate == null)) {
                this.onGetCurrentDateTimeUtcCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrentDateTimeUtcCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrentDateTimeUtcDelegate, null, this.onEndGetCurrentDateTimeUtcDelegate, this.onGetCurrentDateTimeUtcCompletedDelegate, userState);
        }
    }
}
